{"ast":null,"code":"var _jsxFileName = \"/Users/seanmcdonnell/Documents/webdev/week8/dark-mode/src/components/Chart.jsx\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from \"recharts\";\n\nvar Chart = function Chart(_ref) {\n  var sparklineData = _ref.sparklineData;\n  var formattedData = sparklineData.map(function (price, idx) {\n    if (idx % 6 === 0) {\n      var timeToSubtract = 168 - idx;\n      var date = moment().subtract(timeToSubtract, \"hours\").format(\"ddd h:mma\");\n      return {\n        value: price,\n        date: date\n      };\n    } else if (idx === sparklineData.length - 1) {\n      var _date = moment().format(\"ddd h:mma\");\n\n      return {\n        value: price,\n        date: _date\n      };\n    }\n\n    return null;\n  }).filter(function (data) {\n    return data;\n  });\n  return React.createElement(LineChart, {\n    width: 1100,\n    height: 300,\n    data: formattedData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#8884d8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    interval: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/seanmcdonnell/Documents/webdev/week8/dark-mode/src/components/Chart.jsx"],"names":["React","moment","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Chart","sparklineData","formattedData","map","price","idx","timeToSubtract","date","subtract","format","value","length","filter","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,aAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,OANF,QAOO,UAPP;;AASA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACnC,MAAMC,aAAa,GAAGD,aAAa,CAChCE,GADmB,CACf,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACnB,QAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACjB,UAAMC,cAAc,GAAG,MAAMD,GAA7B;AACA,UAAME,IAAI,GAAGd,MAAM,GAChBe,QADU,CACDF,cADC,EACe,OADf,EAEVG,MAFU,CAEH,WAFG,CAAb;AAGA,aAAO;AAAEC,QAAAA,KAAK,EAAEN,KAAT;AAAgBG,QAAAA,IAAI,EAAJA;AAAhB,OAAP;AACD,KAND,MAMO,IAAIF,GAAG,KAAKJ,aAAa,CAACU,MAAd,GAAuB,CAAnC,EAAsC;AAC3C,UAAMJ,KAAI,GAAGd,MAAM,GAAGgB,MAAT,CAAgB,WAAhB,CAAb;;AACA,aAAO;AAAEC,QAAAA,KAAK,EAAEN,KAAT;AAAgBG,QAAAA,IAAI,EAAJA;AAAhB,OAAP;AACD;;AACD,WAAO,IAAP;AACD,GAbmB,EAcnBK,MAdmB,CAcZ,UAAAC,IAAI;AAAA,WAAIA,IAAJ;AAAA,GAdQ,CAAtB;AAgBA,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAwB,IAAA,MAAM,EAAE,GAAhC;AAAqC,IAAA,IAAI,EAAEX,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAC,MAAtB;AAA6B,IAAA,eAAe,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA1BD;;AA4BA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\n\nconst Chart = ({ sparklineData }) => {\n  const formattedData = sparklineData\n    .map((price, idx) => {\n      if (idx % 6 === 0) {\n        const timeToSubtract = 168 - idx;\n        const date = moment()\n          .subtract(timeToSubtract, \"hours\")\n          .format(\"ddd h:mma\");\n        return { value: price, date };\n      } else if (idx === sparklineData.length - 1) {\n        const date = moment().format(\"ddd h:mma\");\n        return { value: price, date };\n      }\n      return null;\n    })\n    .filter(data => data);\n\n  return (\n    <LineChart width={1100} height={300} data={formattedData}>\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <XAxis dataKey=\"date\" interval={3} />\n      <YAxis />\n      <Tooltip />\n    </LineChart>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}